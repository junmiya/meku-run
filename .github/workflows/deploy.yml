name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    - name: Quality Check (Fast)
      run: |
        echo "🔍 Running quality checks..."
        echo "📊 Type checking (target: <10s)..."
        time npm run type-check
        echo "✅ Quality checks completed!"

    - name: Build Application
      run: |
        echo "Node.js version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Environment variables:"
        echo "NEXT_PUBLIC_AUTH_ENABLED: $NEXT_PUBLIC_AUTH_ENABLED"
        npm run build
      env:
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY || 'AIzaSyBJSobP7SJjT0kLDKx7cIrq2uCeTlKs978' }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || 'meku-run.firebaseapp.com' }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID || 'meku-run' }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || 'meku-run.firebasestorage.app' }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '762843174518' }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID || '1:762843174518:web:7057c9553148b56719b157' }}
        NEXT_PUBLIC_AUTH_ENABLED: ${{ secrets.NEXT_PUBLIC_AUTH_ENABLED || 'true' }}
        
    - name: Verify Build Output
      run: |
        ls -la out/
        echo "Build files created successfully"

    - name: Check Firebase Service Account
      run: |
        if [ -z "${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}" ]; then
          echo "❌ FIREBASE_SERVICE_ACCOUNT_MEKU_RUN is not set in GitHub Secrets"
          echo ""
          echo "🔧 📋 完全修正ガイド: SERVICE_ACCOUNT_FIX.md"
          echo ""
          echo "⚡ 緊急修正手順:"
          echo "1. Firebase Console: https://console.firebase.google.com/project/meku-run/settings/serviceaccounts/adminsdk"
          echo "2. 「新しい秘密鍵の生成」をクリック"
          echo "3. JSON ファイルをダウンロード"
          echo "4. GitHub Secrets 更新: https://github.com/junmiya/meku-run/settings/secrets/actions"
          echo "5. JSON ファイル全体をコピー&ペースト"
          echo ""
          exit 1
        else
          echo "✅ FIREBASE_SERVICE_ACCOUNT_MEKU_RUN is configured"
          echo "🔍 Secret length: $(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | wc -c) characters"
        fi
        
    - name: Validate Service Account JSON
      run: |
        echo "🔍 Validating Service Account JSON format..."
        if echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | jq . > /dev/null; then
          echo "✅ Valid JSON format"
          echo "🔍 Checking required fields..."
          
          # プロジェクトID確認
          PROJECT_ID=$(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | jq -r '.project_id')
          if [ "$PROJECT_ID" = "meku-run" ]; then
            echo "✅ Project ID matches: $PROJECT_ID"
          else
            echo "❌ Project ID mismatch. Expected: meku-run, Got: $PROJECT_ID"
            exit 1
          fi
          
          # Service Accountタイプ確認
          ACCOUNT_TYPE=$(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | jq -r '.type')
          if [ "$ACCOUNT_TYPE" = "service_account" ]; then
            echo "✅ Service Account type correct"
          else
            echo "❌ Invalid account type: $ACCOUNT_TYPE"
            exit 1
          fi
          
          # Client Email確認
          CLIENT_EMAIL=$(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | jq -r '.client_email')
          echo "📧 Service Account Email: $CLIENT_EMAIL"
          
        else
          echo "❌ Invalid JSON format - Service Account JSON が壊れています"
          echo ""
          echo "🔧 今すぐ修正する方法:"
          echo "1. 🌐 Firebase Console を開く:"
          echo "   https://console.firebase.google.com/project/meku-run/settings/serviceaccounts/adminsdk"
          echo ""
          echo "2. 🔑 新しい秘密鍵を生成:"
          echo "   「新しい秘密鍵の生成」ボタンをクリック"
          echo ""
          echo "3. 📋 GitHub Secrets を更新:"
          echo "   https://github.com/junmiya/meku-run/settings/secrets/actions"
          echo "   - FIREBASE_SERVICE_ACCOUNT_MEKU_RUN を Update"
          echo "   - JSON ファイル全体をコピー&ペースト"
          echo ""
          echo "4. 🧪 テスト実行:"
          echo "   git commit --allow-empty -m '🔧 Test new Service Account'"
          echo "   git push origin main"
          echo ""
          echo "📖 詳細ガイド: SERVICE_ACCOUNT_FIX.md"
          exit 1
        fi
        
    - name: Deploy to Firebase Hosting (Detailed Debug)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        set -e
        
        echo "🔧 Setting up Firebase authentication..."
        echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' > firebase-service-account.json
        
        echo "📝 Service Account file info:"
        ls -la firebase-service-account.json
        
        echo "🔍 JSON structure check:"
        head -c 200 firebase-service-account.json
        
        export GOOGLE_APPLICATION_CREDENTIALS="$(pwd)/firebase-service-account.json"
        echo "Environment: GOOGLE_APPLICATION_CREDENTIALS set to $GOOGLE_APPLICATION_CREDENTIALS"
        
        echo "📦 Installing Firebase CLI..."
        npm install -g firebase-tools@latest
        
        echo "🔧 Firebase CLI version:"
        firebase --version
        
        echo "🔐 Testing Firebase authentication..."
        if firebase projects:list --json > auth_test.json; then
          echo "✅ Authentication successful"
          echo "📋 Available projects:"
          # jq エラーを回避する安全な処理
          cat auth_test.json | jq -r '.[] | .projectId // "unknown"' 2>/dev/null || echo "meku-run (project verified)"
          rm -f auth_test.json
        else
          echo "❌ Authentication failed"
          echo ""
          echo "🔍 デバッグ情報:"
          echo "Service Account email: $(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | jq -r '.client_email')"
          echo "Project ID: $(echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}' | jq -r '.project_id')"
          echo "Credentials file: $(ls -la firebase-service-account.json)"
          echo ""
          echo "🔧 考えられる原因:"
          echo "1. Service Account に Firebase Admin 権限がない"
          echo "2. Service Account がプロジェクトに追加されていない"
          echo "3. JSON キーが無効または期限切れ"
          echo ""
          echo "🚀 緊急解決方法:"
          echo "1. Google Cloud Console: https://console.cloud.google.com/iam-admin/iam?project=meku-run"
          echo "2. Service Account に以下の権限を付与:"
          echo "   - Firebase Hosting Admin"
          echo "   - Firebase Authentication Admin"
          echo "   - Editor (一時的)"
          exit 1
        fi
        
        echo "📁 Checking build output..."
        ls -la out/
        echo "Index.html exists:" && ls -la out/index.html
        
        echo "🔧 Firebase config validation:"
        cat firebase.json
        
        echo "🚀 Deploying to Firebase Hosting..."
        firebase deploy --project meku-run --only hosting --debug --force || {
          echo "❌ Deploy failed, trying alternative approach..."
          firebase use meku-run
          firebase deploy --only hosting --debug
        }
        
        echo "🧹 Cleaning up credentials..."
        rm -f firebase-service-account.json
      env:
        FIREBASE_CLI_EXPERIMENTS: webframeworks
        
    - name: Deploy Debug Info
      if: failure()
      run: |
        echo "🔍 Deploy failed - Debug information:"
        echo "Working directory: $(pwd)"
        echo "Firebase CLI version:"
        npx firebase --version || echo "Firebase CLI not found"
        echo "Project info:"
        npx firebase projects:list || echo "Cannot list projects"
        echo "Build output check:"
        ls -la out/ || echo "No out directory"
        echo "Firebase config:"
        cat firebase.json || echo "No firebase.json"
        
    - name: Deploy Preview (PR only)
      if: github.event_name == 'pull_request'
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MEKU_RUN }}
        projectId: meku-run