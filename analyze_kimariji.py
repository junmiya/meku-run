# 百人一首の下の句読みから正確な決まり字を算出するスクリプト

# 全100首の下の句読みデータ
shimo_readings = [
    "わがころもでは つゆにぬれつつ",  # 1
    "ころもほすちょう あまのかぐやま",  # 2
    "ながながしよを ひとりかもねん",   # 3
    "ふじのたかねに ゆきはふりつつ",   # 4
    "こえきくときぞ あきはかなしき",   # 5
    "きりたちのぼる あきのゆうぐれ",   # 6
    "みかさのやまに いでしつきかも",   # 7
    "よをうじやまと ひとはいうなり",   # 8
    "わがみよにふる ながめせしまに",   # 9
    "しるもしらぬも おうさかのせき",   # 10
    "ひとにはつげよ あまのつりぶね",   # 11
    "おとめのすがた しばしとどめん",   # 12
    "こいぞつもりて ふちとなりぬる",   # 13
    "みだれそめにし われならなくに",   # 14
    "わがころもでに ゆきはふりつつ",   # 15
    "まつとしきかば いまかえりこん",   # 16
    "からくれないに みずくくるとは",   # 17
    "ゆめのかよいじ ひとめよくらん",   # 18
    "あわでこのよを すぐしてよとや",   # 19
    "みをつくしても あわんとぞおもう", # 20
    "ありあけのつきを まちいでつるかな", # 21
    "むべやまかぜを あらしというらん", # 22
    "わがみひとつの あきにはあらねど", # 23
    "もみじのにしき かみのまにまに",   # 24
    "ひとにしられで くるよしもがな",   # 25
    "いまひとたびの みゆきまたなん",   # 26
    "いつみきとてか こいしかるらん",   # 27
    "ひとめもくさも かれぬとおもえば", # 28
    "おきまどわせる しらぎくのはな",   # 29
    "あかつきばかり うきものはなし",   # 30
    "よしののさとに ふれるしらゆき",   # 31
    "ながれもあえず もみじなりけり",   # 32
    "しずこころなく はなのちるらん",   # 33
    "まつもむかしの ともならなくに",   # 34
    "はなぞむかしの かににおいける",   # 35
    "くものいずこに つきやどるらん",   # 36
    "つらぬきとめぬ たまぞちりける",   # 37
    "ひとのいのちの おしくもあるかな", # 38
    "あまりてなどか ひとのこいしき",   # 39
    "ものやおもうと ひとのとうまで",   # 40
    "ひとしれずこそ おもいそめしか",   # 41
    "すえのまつやま なみこさじとは",   # 42
    "むかしはものを おもわざりけり",   # 43
    "ひとをもみをも うらみざらまし",   # 44
    "みのいたずらに なりぬべきかな",   # 45
    "ゆくえもしらぬ こいのみちかな",   # 46
    "ひとこそみえね あきはきにけり",   # 47
    "くだけてものを おもうころかな",   # 48
    "ひるはきえつつ ものをこそおもえ", # 49
    "ながくもがなと おもいけるかな",   # 50
    "さしもしらじな もゆるおもいを",   # 51
    "なおうらめしき あさぼらけかな",   # 52
    "いかにひさしき ものとかはしる",   # 53
    "きょうをかぎりの いのちともがな", # 54
    "なこそながれて なおきこえけれ",   # 55
    "いまひとたびの あうこともがな",   # 56
    "くもがくれにし よわのつきかな",   # 57
    "いでそよひとを わすれやはする",   # 58
    "かたぶくまでの つきをみしかな",   # 59
    "まだふみもみず あまのはしだて", # 60
    "きょうここのえに においぬるかな", # 61
    "よにおうさかの せきはゆるさじ",   # 62
    "ひとづてならで いうよしもがな",   # 63
    "あらわれわたる せぜのあじろぎ",   # 64
    "こいにくちなん なこそおしけれ",   # 65
    "はなよりほかに しるひともなし",   # 66
    "かいなくたたん なこそおしけれ",   # 67
    "こいしかるべき よわのつきかな",   # 68
    "たつたのかわの にしきなりけり",   # 69
    "いずくもおなじ あきのゆうぐれ",   # 70
    "あしのまろやに あきかぜぞふく",   # 71
    "かけじやそでの ぬれもこそすれ",   # 72
    "とやまのかすみ たたずもあらなん", # 73
    "はげしかれとは いのらぬものを",   # 74
    "あわれことしの あきもいぬめり",   # 75
    "くもいにまがう おきつしらなみ",   # 76
    "われてもすえに あわんとぞおもう", # 77
    "いくよねざめぬ すまのせきもり",   # 78
    "もれいずるつきの かげのさやけさ", # 79
    "みだれてけさは ものをこそおもえ", # 80
    "ただありあけの つきぞのこれる",   # 81
    "うきにたえぬは なみだなりけり",   # 82
    "やまのおくにも しかぞなくなる",   # 83
    "うしとみしよぞ いまはこいしき",   # 84
    "ねやのひまさえ つれなかりけり",   # 85
    "かこちがおなる わがなみだかな",   # 86
    "きりたちのぼる あきのゆうぐれ",   # 87
    "みをつくしてや こいわたるべき",   # 88
    "しのぶることの よわりもぞする",   # 89
    "ぬれにぞぬれし いろはかわらず",   # 90
    "ころもかたしき ひとりかもねん",   # 91
    "ひとこそしらね かわくまもなし",   # 92
    "あまのおぶねの つなでかなしも",   # 93
    "ふるさとさむく ころもうつなり",   # 94
    "わがたつそまに すみぞめのそで",   # 95
    "ふりゆくものは わがみなりけり",   # 96
    "やくやもしおの みもこがれつつ",   # 97
    "みそぎぞなつの しるしなりける",   # 98
    "よをおもうゆえに ものおもうみは", # 99
    "なおあまりある むかしなりけり",   # 100
]

# 決まり字を算出する関数
def calculate_kimariji(readings):
    result = []
    
    for i, reading in enumerate(readings):
        # 空白を除去してひらがなのみに
        clean_reading = reading.replace(" ", "")
        
        kimariji_length = 1
        found_unique = False
        
        # 1文字から順に確認
        while kimariji_length <= len(clean_reading) and not found_unique:
            current_pattern = clean_reading[:kimariji_length]
            
            # 同じパターンで始まる他の読みがあるかチェック
            conflicts = []
            for j, other_reading in enumerate(readings):
                if i != j:
                    other_clean = other_reading.replace(" ", "")
                    if other_clean.startswith(current_pattern):
                        conflicts.append(j + 1)  # 1-based index
            
            if not conflicts:
                found_unique = True
                result.append({
                    'card_id': i + 1,
                    'reading': reading,
                    'kimariji': current_pattern,
                    'length': kimariji_length,
                    'conflicts': conflicts
                })
            else:
                kimariji_length += 1
        
        if not found_unique:
            # 最大長でも重複がある場合（通常はない）
            result.append({
                'card_id': i + 1,
                'reading': reading,
                'kimariji': clean_reading,
                'length': len(clean_reading),
                'conflicts': []
            })
    
    return result

# 全100首の決まり字を算出
result = calculate_kimariji(shimo_readings)

print("百人一首の正確な決まり字:")
print("=" * 80)

# 決まり字の長さ別に分類
by_length = {1: [], 2: [], 3: [], 4: [], 5: [], 6: []}
for item in result:
    length = min(item['length'], 6)  # 6文字以上は6にまとめる
    by_length[length].append(item)

# 統計情報
print(f"\n決まり字の長さ別統計:")
for length in sorted(by_length.keys()):
    count = len(by_length[length])
    if count > 0:
        print(f"{length}字決まり: {count}枚")

print(f"\n一字決まり（むすめふさほせ）: {len(by_length[1])}枚")
if by_length[1]:
    for item in by_length[1]:
        print(f"  第{item['card_id']:2d}首: {item['kimariji']} - {item['reading']}")

print("\n全決まり字一覧:")
print("-" * 80)
for item in sorted(result, key=lambda x: x['card_id']):
    print(f"第{item['card_id']:3d}首: {item['kimariji']:<8} ({item['length']}字) - {item['reading']}")