exports.id=728,exports.ids=[728],exports.modules={9583:(e,r,t)=>{Promise.resolve().then(t.bind(t,4001)),Promise.resolve().then(t.bind(t,6368))},3140:(e,r,t)=>{Promise.resolve().then(t.t.bind(t,2994,23)),Promise.resolve().then(t.t.bind(t,6114,23)),Promise.resolve().then(t.t.bind(t,9727,23)),Promise.resolve().then(t.t.bind(t,9671,23)),Promise.resolve().then(t.t.bind(t,1868,23)),Promise.resolve().then(t.t.bind(t,4759,23))},4001:(e,r,t)=>{"use strict";t.d(r,{AuthProvider:()=>c,a:()=>d});var a=t(326),s=t(7577),o=t(8108),i=t(445);new Date().toISOString(),new Date().toISOString(),()=>({});let n=(0,s.createContext)(void 0),d=()=>{let e=(0,s.useContext)(n);if(void 0===e)throw Error("useAuth must be used within an AuthProvider");return e},c=({children:e})=>{let[r,t]=(0,s.useState)(null),[d,c]=(0,s.useState)(!0);(0,s.useEffect)(()=>(console.log("AuthProvider - AUTH_ENABLED:",!0),console.log("AuthProvider - Environment:","production"),(0,o.Aj)(i.I,e=>{console.log("AuthProvider - Auth state changed:",{uid:e?.uid,email:e?.email,emailVerified:e?.emailVerified,isAnonymous:e?.isAnonymous}),t(e),c(!1)})),[]);let l=async(e,r,t)=>{try{let a=await (0,o.Xb)(i.I,e,r);await (0,o.ck)(a.user,{displayName:t})}catch(e){throw e}},u=async(e,r)=>{try{console.log("AuthProvider - Signing in with email:",e);let t=await (0,o.e5)(i.I,e,r);console.log("AuthProvider - User signed in successfully:",{uid:t.user.uid,email:t.user.email,emailVerified:t.user.emailVerified})}catch(e){throw console.error("Sign in error:",e),e}},h=async()=>{try{let e=new o.hJ;await (0,o.rh)(i.I,e)}catch(e){throw e}},g=async()=>{try{await (0,o.w7)(i.I)}catch(e){throw e}},w=async e=>{try{await (0,o.LS)(i.I,e)}catch(e){throw e}};return a.jsx(n.Provider,{value:{user:r,loading:d,signUp:l,signIn:u,signInWithGoogle:h,signOut:g,resetPassword:w,isAuthEnabled:!0},children:e})}},6368:(e,r,t)=>{"use strict";t.d(r,{B:()=>l,DataManagerProvider:()=>c});var a=t(326),s=t(7577),o=t(2719),i=t(792),n=t(4001);let d=(0,s.createContext)(void 0),c=({children:e})=>{let{user:r,loading:t,isAuthEnabled:c}=(0,n.a)(),[l,u]=(0,s.useState)(new o.A),[h,g]=(0,s.useState)(!1),[w]=(0,s.useState)(new i.q);(0,s.useEffect)(()=>{t||(c&&r?(w.setUser(r),u(w),g(!0)):(u(new o.A),g(!1)))},[r,t,c,w]);let m=async()=>{if(!c)throw Error("認証機能が無効になっているため、クラウドモードに切り替えできません");if(!r)throw Error("クラウドモードに切り替えるにはログインが必要です");w.setUser(r),u(w),g(!0)},f=async()=>{if(!c)return console.error("認証機能が無効になっているため、クラウドに移行できません"),!1;if(!r)return console.error("クラウドに移行するにはログインが必要です"),!1;try{let e=new o.A,r=await e.getAllCards();if(0===r.length)return!0;let t=await w.migrateFromLocalStorage(r);if(t.success)return console.log(`${r.length} 件のカードをクラウドに移行しました`),!0;return console.error("移行に失敗しました:",t.errors),!1}catch(e){return console.error("移行中にエラーが発生しました:",e),!1}};return a.jsx(d.Provider,{value:{dataManager:l,isCloudMode:h,switchToCloud:m,switchToLocal:()=>{u(new o.A),g(!1)},migrateToCloud:f},children:e})},l=()=>{let e=(0,s.useContext)(d);if(void 0===e)throw Error("useDataManager must be used within a DataManagerProvider");return e}},445:(e,r,t)=>{"use strict";t.d(r,{I:()=>n,db:()=>d});var a=t(2585),s=t(8108),o=t(76);let i=(0,a.ZF)({apiKey:"AIzaSyBJSobP7SJjT0kLDKx7cIrq2uCeTlKs978",authDomain:"meku-run.firebaseapp.com",projectId:"meku-run",storageBucket:"meku-run.firebasestorage.app",messagingSenderId:"762843174518",appId:"1:762843174518:web:7057c9553148b56719b157"}),n=(0,s.v0)(i),d=(0,o.ad)(i)},792:(e,r,t)=>{"use strict";t.d(r,{q:()=>o});var a=t(76),s=t(445);class o{constructor(e=null){this.user=null,this.unsubscribeListeners=[],this.user=e}setUser(e){this.user=e}ensureUser(){if(!this.user)throw Error("User must be set to use FirebaseManager")}getUserId(){return this.ensureUser(),this.user.uid}getCollectionRef(){let e=this.getUserId();return(0,a.hJ)(s.db,"users",e,"wordCards")}convertFirestoreToWordCard(e){let r=e.data();return{id:e.id,word:r.word,meaning:r.meaning,created_at:r.created_at?.toDate?.()?.toISOString()||r.created_at,updated_at:r.updated_at?.toDate?.()?.toISOString()||r.updated_at,tags:r.tags||[],isStarred:r.isStarred||!1,user_id:this.getUserId()}}async getAllCards(){this.ensureUser(),console.log("FirebaseManager.getAllCards() - User:",this.user?.uid),console.log("FirebaseManager.getAllCards() - User email:",this.user?.email),console.log("FirebaseManager.getAllCards() - User email verified:",this.user?.emailVerified);try{if(!this.user?.uid)throw Error("User is not authenticated");let e=this.getCollectionRef();console.log("FirebaseManager.getAllCards() - Collection path:",`users/${this.user.uid}/wordCards`);let r=await (0,a.PL)(e);console.log("FirebaseManager.getAllCards() - Snapshot size:",r.size);let t=[];return r.forEach(e=>{t.push(this.convertFirestoreToWordCard(e))}),t.sort((e,r)=>new Date(r.created_at).getTime()-new Date(e.created_at).getTime()),t}catch(e){throw console.error("FirebaseManager.getAllCards() - Full error:",e),console.error("FirebaseManager.getAllCards() - Error code:",e.code),console.error("FirebaseManager.getAllCards() - Error message:",e.message),"permission-denied"===e.code&&console.error("Permission denied. User info:",{uid:this.user?.uid,email:this.user?.email,emailVerified:this.user?.emailVerified,isAnonymous:this.user?.isAnonymous,providerData:this.user?.providerData}),Error(`Failed to fetch cards: ${e}`)}}async getCard(e){try{let r=(0,a.JU)(this.getCollectionRef(),e),t=await (0,a.QT)(r);if(!t.exists())return null;return this.convertFirestoreToWordCard(t)}catch(e){throw console.error("Error fetching card from Firebase:",e),Error(`Failed to fetch card: ${e}`)}}async createCard(e){try{let r=await (0,a.ET)(this.getCollectionRef(),{...e,created_at:(0,a.Bt)(),updated_at:(0,a.Bt)()}),t=await (0,a.QT)(r);if(!t.exists())throw Error("Failed to create card");return this.convertFirestoreToWordCard(t)}catch(e){throw console.error("Error creating card in Firebase:",e),Error(`Failed to create card: ${e}`)}}async updateCard(e,r){try{let t=(0,a.JU)(this.getCollectionRef(),e),{user_id:s,...o}=r;await (0,a.r7)(t,{...o,updated_at:(0,a.Bt)()});let i=await (0,a.QT)(t);if(!i.exists())throw Error(`Card with id ${e} not found`);return this.convertFirestoreToWordCard(i)}catch(e){throw console.error("Error updating card in Firebase:",e),Error(`Failed to update card: ${e}`)}}async deleteCard(e){try{let r=(0,a.JU)(this.getCollectionRef(),e);await (0,a.oe)(r)}catch(e){throw console.error("Error deleting card from Firebase:",e),Error(`Failed to delete card: ${e}`)}}async createCards(e){try{let r=(0,a.qs)(s.db),t=[];e.forEach(e=>{let s=(0,a.JU)(this.getCollectionRef());r.set(s,{...e,created_at:(0,a.Bt)(),updated_at:(0,a.Bt)()}),t.push(s)}),await r.commit();let o=[];for(let e of t){let r=await (0,a.QT)(e);r.exists()&&o.push(this.convertFirestoreToWordCard(r))}return o}catch(e){throw console.error("Error creating cards in Firebase:",e),Error(`Failed to create cards: ${e}`)}}async deleteAllCards(){try{let e=await (0,a.PL)(this.getCollectionRef()),r=(0,a.qs)(s.db);e.forEach(e=>{r.delete(e.ref)}),await r.commit()}catch(e){throw console.error("Error deleting all cards from Firebase:",e),Error(`Failed to delete all cards: ${e}`)}}async syncData(){try{return await this.getAllCards(),{success:!0}}catch(e){return console.error("Error syncing data:",e),{success:!1,errors:[e instanceof Error?e:Error("Unknown sync error")]}}}isOffline(){return!navigator.onLine}subscribeToCards(e){let r=(0,a.IO)(this.getCollectionRef(),(0,a.Xo)("created_at","desc")),t=(0,a.cf)(r,r=>{let t=[];r.forEach(e=>{t.push(this.convertFirestoreToWordCard(e))}),e(t)},e=>{console.error("Error in real-time listener:",e)});return this.unsubscribeListeners.push(t),t}cleanup(){this.unsubscribeListeners.forEach(e=>e()),this.unsubscribeListeners=[]}async migrateFromLocalStorage(e){try{let r=await this.getAllCards(),t=new Set(r.map(e=>e.id)),a=e.filter(e=>!t.has(e.id));if(0===a.length)return{success:!0};let s=a.map(({id:e,created_at:r,updated_at:t,user_id:a,...s})=>s);return await this.createCards(s),{success:!0}}catch(e){return console.error("Error migrating from localStorage:",e),{success:!1,errors:[e instanceof Error?e:Error("Migration failed")]}}}}},2719:(e,r,t)=>{"use strict";t.d(r,{A:()=>s});let a="wordCards";class s{generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}getCurrentTimestamp(){return new Date().toISOString()}getStoredCards(){try{let e=localStorage.getItem(a);return e?JSON.parse(e):[]}catch(e){return console.error("Error reading from localStorage:",e),[]}}saveCards(e){try{localStorage.setItem(a,JSON.stringify(e))}catch(e){throw console.error("Error saving to localStorage:",e),Error("Failed to save data to local storage")}}async getAllCards(){return this.getStoredCards()}async getCard(e){return this.getStoredCards().find(r=>r.id===e)||null}async createCard(e){let r=this.getStoredCards(),t=this.getCurrentTimestamp(),a={...e,id:this.generateId(),created_at:t,updated_at:t};return r.push(a),this.saveCards(r),a}async updateCard(e,r){let t=this.getStoredCards(),a=t.findIndex(r=>r.id===e);if(-1===a)throw Error(`Card with id ${e} not found`);let s=t[a],o={...s,...r,updated_at:this.getCurrentTimestamp(),id:s.id,word:r.word??s.word,meaning:r.meaning??s.meaning,created_at:s.created_at};return t[a]=o,this.saveCards(t),o}async deleteCard(e){let r=this.getStoredCards(),t=r.filter(r=>r.id!==e);if(t.length===r.length)throw Error(`Card with id ${e} not found`);this.saveCards(t)}async createCards(e){let r=this.getStoredCards(),t=this.getCurrentTimestamp(),a=e.map(e=>({...e,id:this.generateId(),created_at:t,updated_at:t}));return r.push(...a),this.saveCards(r),a}async deleteAllCards(){this.saveCards([])}isOffline(){return!0}}},2488:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>d,metadata:()=>n});var a=t(9510),s=t(8570);(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/src/contexts/AuthContext.tsx#useAuth`);let o=(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/src/contexts/AuthContext.tsx#AuthProvider`),i=(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/src/contexts/DataManagerContext.tsx#DataManagerProvider`);(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/src/contexts/DataManagerContext.tsx#useDataManager`),t(7272);let n={title:"単語カードアプリ",description:"Google認証対応の単語学習アプリ"};function d({children:e}){return a.jsx("html",{lang:"ja",children:a.jsx("body",{children:a.jsx(o,{children:a.jsx(i,{children:e})})})})}},7272:()=>{}};