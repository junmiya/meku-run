exports.id=775,exports.ids=[775],exports.modules={623:(r,e,t)=>{Promise.resolve().then(t.bind(t,3136)),Promise.resolve().then(t.bind(t,6787))},3140:(r,e,t)=>{Promise.resolve().then(t.t.bind(t,2994,23)),Promise.resolve().then(t.t.bind(t,6114,23)),Promise.resolve().then(t.t.bind(t,9727,23)),Promise.resolve().then(t.t.bind(t,9671,23)),Promise.resolve().then(t.t.bind(t,1868,23)),Promise.resolve().then(t.t.bind(t,4759,23))},3136:(r,e,t)=>{"use strict";t.d(e,{AuthProvider:()=>d,a:()=>i});var a=t(326),s=t(7577);t(8108),t(902);let o={uid:"anonymous",email:"anonymous@example.com",displayName:"Anonymous User",emailVerified:!1,photoURL:null,phoneNumber:null,providerId:"firebase",isAnonymous:!0,metadata:{creationTime:new Date().toISOString(),lastSignInTime:new Date().toISOString()},providerData:[],refreshToken:"",tenantId:null,delete:async()=>{},getIdToken:async()=>"",getIdTokenResult:async()=>({}),reload:async()=>{},toJSON:()=>({})},n=(0,s.createContext)(void 0),i=()=>{let r=(0,s.useContext)(n);if(void 0===r)throw Error("useAuth must be used within an AuthProvider");return r},d=({children:r})=>{let[e,t]=(0,s.useState)(null),[i,d]=(0,s.useState)(!0);(0,s.useEffect)(()=>{t(o),d(!1)},[]);let c=async(r,e,t)=>{throw Error("認証機能が無効になっています")},l=async(r,e)=>{throw Error("認証機能が無効になっています")},u=async()=>{throw Error("認証機能が無効になっています")},h=async()=>{throw Error("認証機能が無効になっています")},g=async r=>{throw Error("認証機能が無効になっています")};return a.jsx(n.Provider,{value:{user:e,loading:i,signUp:c,signIn:l,signInWithGoogle:u,signOut:h,resetPassword:g,isAuthEnabled:!1},children:r})}},6787:(r,e,t)=>{"use strict";t.d(e,{DataManagerProvider:()=>h,B:()=>g});var a=t(326),s=t(7577);let o="wordCards";class n{generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}getCurrentTimestamp(){return new Date().toISOString()}getStoredCards(){try{let r=localStorage.getItem(o);return r?JSON.parse(r):[]}catch(r){return console.error("Error reading from localStorage:",r),[]}}saveCards(r){try{localStorage.setItem(o,JSON.stringify(r))}catch(r){throw console.error("Error saving to localStorage:",r),Error("Failed to save data to local storage")}}async getAllCards(){return this.getStoredCards()}async getCard(r){return this.getStoredCards().find(e=>e.id===r)||null}async createCard(r){let e=this.getStoredCards(),t=this.getCurrentTimestamp(),a={...r,id:this.generateId(),created_at:t,updated_at:t};return e.push(a),this.saveCards(e),a}async updateCard(r,e){let t=this.getStoredCards(),a=t.findIndex(e=>e.id===r);if(-1===a)throw Error(`Card with id ${r} not found`);let s=t[a],o={...s,...e,updated_at:this.getCurrentTimestamp(),id:s.id,word:e.word??s.word,meaning:e.meaning??s.meaning,created_at:s.created_at};return t[a]=o,this.saveCards(t),o}async deleteCard(r){let e=this.getStoredCards(),t=e.filter(e=>e.id!==r);if(t.length===e.length)throw Error(`Card with id ${r} not found`);this.saveCards(t)}async createCards(r){let e=this.getStoredCards(),t=this.getCurrentTimestamp(),a=r.map(r=>({...r,id:this.generateId(),created_at:t,updated_at:t}));return e.push(...a),this.saveCards(e),a}async deleteAllCards(){this.saveCards([])}isOffline(){return!0}}var i=t(76),d=t(902);class c{constructor(r=null){this.user=null,this.unsubscribeListeners=[],this.user=r}setUser(r){this.user=r}ensureUser(){if(!this.user)throw Error("User must be set to use FirebaseManager")}getUserId(){return this.ensureUser(),this.user.uid}getCollectionRef(){let r=this.getUserId();return(0,i.hJ)(d.db,"users",r,"wordCards")}convertFirestoreToWordCard(r){let e=r.data();return{id:r.id,word:e.word,meaning:e.meaning,created_at:e.created_at?.toDate?.()?.toISOString()||e.created_at,updated_at:e.updated_at?.toDate?.()?.toISOString()||e.updated_at,tags:e.tags||[],isStarred:e.isStarred||!1,user_id:this.getUserId()}}async getAllCards(){try{let r=(0,i.IO)(this.getCollectionRef(),(0,i.Xo)("created_at","desc")),e=await (0,i.PL)(r),t=[];return e.forEach(r=>{t.push(this.convertFirestoreToWordCard(r))}),t}catch(r){throw console.error("Error fetching cards from Firebase:",r),Error(`Failed to fetch cards: ${r}`)}}async getCard(r){try{let e=(0,i.JU)(this.getCollectionRef(),r),t=await (0,i.QT)(e);if(!t.exists())return null;return this.convertFirestoreToWordCard(t)}catch(r){throw console.error("Error fetching card from Firebase:",r),Error(`Failed to fetch card: ${r}`)}}async createCard(r){try{let e=await (0,i.ET)(this.getCollectionRef(),{...r,created_at:(0,i.Bt)(),updated_at:(0,i.Bt)()}),t=await (0,i.QT)(e);if(!t.exists())throw Error("Failed to create card");return this.convertFirestoreToWordCard(t)}catch(r){throw console.error("Error creating card in Firebase:",r),Error(`Failed to create card: ${r}`)}}async updateCard(r,e){try{let t=(0,i.JU)(this.getCollectionRef(),r),{user_id:a,...s}=e;await (0,i.r7)(t,{...s,updated_at:(0,i.Bt)()});let o=await (0,i.QT)(t);if(!o.exists())throw Error(`Card with id ${r} not found`);return this.convertFirestoreToWordCard(o)}catch(r){throw console.error("Error updating card in Firebase:",r),Error(`Failed to update card: ${r}`)}}async deleteCard(r){try{let e=(0,i.JU)(this.getCollectionRef(),r);await (0,i.oe)(e)}catch(r){throw console.error("Error deleting card from Firebase:",r),Error(`Failed to delete card: ${r}`)}}async createCards(r){try{let e=(0,i.qs)(d.db),t=[];r.forEach(r=>{let a=(0,i.JU)(this.getCollectionRef());e.set(a,{...r,created_at:(0,i.Bt)(),updated_at:(0,i.Bt)()}),t.push(a)}),await e.commit();let a=[];for(let r of t){let e=await (0,i.QT)(r);e.exists()&&a.push(this.convertFirestoreToWordCard(e))}return a}catch(r){throw console.error("Error creating cards in Firebase:",r),Error(`Failed to create cards: ${r}`)}}async deleteAllCards(){try{let r=await (0,i.PL)(this.getCollectionRef()),e=(0,i.qs)(d.db);r.forEach(r=>{e.delete(r.ref)}),await e.commit()}catch(r){throw console.error("Error deleting all cards from Firebase:",r),Error(`Failed to delete all cards: ${r}`)}}async syncData(){try{return await this.getAllCards(),{success:!0}}catch(r){return console.error("Error syncing data:",r),{success:!1,errors:[r instanceof Error?r:Error("Unknown sync error")]}}}isOffline(){return!navigator.onLine}subscribeToCards(r){let e=(0,i.IO)(this.getCollectionRef(),(0,i.Xo)("created_at","desc")),t=(0,i.cf)(e,e=>{let t=[];e.forEach(r=>{t.push(this.convertFirestoreToWordCard(r))}),r(t)},r=>{console.error("Error in real-time listener:",r)});return this.unsubscribeListeners.push(t),t}cleanup(){this.unsubscribeListeners.forEach(r=>r()),this.unsubscribeListeners=[]}async migrateFromLocalStorage(r){try{let e=await this.getAllCards(),t=new Set(e.map(r=>r.id)),a=r.filter(r=>!t.has(r.id));if(0===a.length)return{success:!0};let s=a.map(({id:r,created_at:e,updated_at:t,user_id:a,...s})=>s);return await this.createCards(s),{success:!0}}catch(r){return console.error("Error migrating from localStorage:",r),{success:!1,errors:[r instanceof Error?r:Error("Migration failed")]}}}}var l=t(3136);let u=(0,s.createContext)(void 0),h=({children:r})=>{let{user:e,loading:t,isAuthEnabled:o}=(0,l.a)(),[i,d]=(0,s.useState)(new n),[h,g]=(0,s.useState)(!1),[w]=(0,s.useState)(new c);(0,s.useEffect)(()=>{t||(o&&e?(w.setUser(e),d(w),g(!0)):(d(new n),g(!1)))},[e,t,o,w]);let f=async()=>{if(!o)throw Error("認証機能が無効になっているため、クラウドモードに切り替えできません");if(!e)throw Error("クラウドモードに切り替えるにはログインが必要です");w.setUser(e),d(w),g(!0)},m=async()=>{if(!o)return console.error("認証機能が無効になっているため、クラウドに移行できません"),!1;if(!e)return console.error("クラウドに移行するにはログインが必要です"),!1;try{let r=new n,e=await r.getAllCards();if(0===e.length)return!0;let t=await w.migrateFromLocalStorage(e);if(t.success)return console.log(`${e.length} 件のカードをクラウドに移行しました`),!0;return console.error("移行に失敗しました:",t.errors),!1}catch(r){return console.error("移行中にエラーが発生しました:",r),!1}};return a.jsx(u.Provider,{value:{dataManager:i,isCloudMode:h,switchToCloud:f,switchToLocal:()=>{d(new n),g(!1)},migrateToCloud:m},children:r})},g=()=>{let r=(0,s.useContext)(u);if(void 0===r)throw Error("useDataManager must be used within a DataManagerProvider");return r}},902:(r,e,t)=>{"use strict";t.d(e,{I:()=>i,db:()=>d});var a=t(2585),s=t(8108),o=t(76);let n=(0,a.ZF)({apiKey:"AIzaSyBJSobP7SJjT0kLDKx7cIrq2uCeTlKs978",authDomain:"meku-run.firebaseapp.com",projectId:"meku-run",storageBucket:"meku-run.firebasestorage.app",messagingSenderId:"762843174518",appId:"1:762843174518:web:7057c9553148b56719b157"}),i=(0,s.v0)(n),d=(0,o.ad)(n)},7730:(r,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>d,metadata:()=>i});var a=t(9510),s=t(8570);(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/contexts/AuthContext.tsx#useAuth`);let o=(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/contexts/AuthContext.tsx#AuthProvider`),n=(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/contexts/DataManagerContext.tsx#DataManagerProvider`);(0,s.createProxy)(String.raw`/workspace/firebase-word-card-app/contexts/DataManagerContext.tsx#useDataManager`),t(7272);let i={title:"単語カードアプリ",description:"Google認証対応の単語学習アプリ"};function d({children:r}){return a.jsx("html",{lang:"ja",children:a.jsx("body",{children:a.jsx(o,{children:a.jsx(n,{children:r})})})})}},7272:()=>{}};