"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[246],{4362:function(r,e,t){t.d(e,{AuthProvider:function(){return d},a:function(){return i}});var a=t(7437),o=t(2265);t(3301),t(6410);let s={uid:"anonymous",email:"anonymous@example.com",displayName:"Anonymous User",emailVerified:!1,photoURL:null,phoneNumber:null,providerId:"firebase",isAnonymous:!0,metadata:{creationTime:new Date().toISOString(),lastSignInTime:new Date().toISOString()},providerData:[],refreshToken:"",tenantId:null,delete:async()=>{},getIdToken:async()=>"",getIdTokenResult:async()=>({}),reload:async()=>{},toJSON:()=>({})},n=(0,o.createContext)(void 0),i=()=>{let r=(0,o.useContext)(n);if(void 0===r)throw Error("useAuth must be used within an AuthProvider");return r},d=r=>{let{children:e}=r,[t,i]=(0,o.useState)(null),[d,c]=(0,o.useState)(!0);(0,o.useEffect)(()=>{i(s),c(!1)},[]);let l=async(r,e,t)=>{throw Error("認証機能が無効になっています")},u=async(r,e)=>{throw Error("認証機能が無効になっています")},h=async()=>{throw Error("認証機能が無効になっています")},g=async()=>{throw Error("認証機能が無効になっています")},f=async r=>{throw Error("認証機能が無効になっています")};return(0,a.jsx)(n.Provider,{value:{user:t,loading:d,signUp:l,signIn:u,signInWithGoogle:h,signOut:g,resetPassword:f,isAuthEnabled:!1},children:e})}},5246:function(r,e,t){t.d(e,{DataManagerProvider:function(){return h},B:function(){return g}});var a=t(7437),o=t(2265);let s="wordCards";class n{generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}getCurrentTimestamp(){return new Date().toISOString()}getStoredCards(){try{let r=localStorage.getItem(s);return r?JSON.parse(r):[]}catch(r){return console.error("Error reading from localStorage:",r),[]}}saveCards(r){try{localStorage.setItem(s,JSON.stringify(r))}catch(r){throw console.error("Error saving to localStorage:",r),Error("Failed to save data to local storage")}}async getAllCards(){return this.getStoredCards()}async getCard(r){return this.getStoredCards().find(e=>e.id===r)||null}async createCard(r){let e=this.getStoredCards(),t=this.getCurrentTimestamp(),a={...r,id:this.generateId(),created_at:t,updated_at:t};return e.push(a),this.saveCards(e),a}async updateCard(r,e){var t,a;let o=this.getStoredCards(),s=o.findIndex(e=>e.id===r);if(-1===s)throw Error("Card with id ".concat(r," not found"));let n=o[s],i={...n,...e,updated_at:this.getCurrentTimestamp(),id:n.id,word:null!==(t=e.word)&&void 0!==t?t:n.word,meaning:null!==(a=e.meaning)&&void 0!==a?a:n.meaning,created_at:n.created_at};return o[s]=i,this.saveCards(o),i}async deleteCard(r){let e=this.getStoredCards(),t=e.filter(e=>e.id!==r);if(t.length===e.length)throw Error("Card with id ".concat(r," not found"));this.saveCards(t)}async createCards(r){let e=this.getStoredCards(),t=this.getCurrentTimestamp(),a=r.map(r=>({...r,id:this.generateId(),created_at:t,updated_at:t}));return e.push(...a),this.saveCards(e),a}async deleteAllCards(){this.saveCards([])}isOffline(){return!0}}var i=t(5978),d=t(6410);class c{setUser(r){this.user=r}ensureUser(){if(!this.user)throw Error("User must be set to use FirebaseManager")}getUserId(){return this.ensureUser(),this.user.uid}getCollectionRef(){let r=this.getUserId();return(0,i.hJ)(d.db,"users",r,"wordCards")}convertFirestoreToWordCard(r){var e,t,a,o,s,n;let i=r.data();return{id:r.id,word:i.word,meaning:i.meaning,created_at:(null===(a=i.created_at)||void 0===a?void 0:null===(t=a.toDate)||void 0===t?void 0:null===(e=t.call(a))||void 0===e?void 0:e.toISOString())||i.created_at,updated_at:(null===(n=i.updated_at)||void 0===n?void 0:null===(s=n.toDate)||void 0===s?void 0:null===(o=s.call(n))||void 0===o?void 0:o.toISOString())||i.updated_at,tags:i.tags||[],isStarred:i.isStarred||!1,user_id:this.getUserId()}}async getAllCards(){try{let r=(0,i.IO)(this.getCollectionRef(),(0,i.Xo)("created_at","desc")),e=await (0,i.PL)(r),t=[];return e.forEach(r=>{t.push(this.convertFirestoreToWordCard(r))}),t}catch(r){throw console.error("Error fetching cards from Firebase:",r),Error("Failed to fetch cards: ".concat(r))}}async getCard(r){try{let e=(0,i.JU)(this.getCollectionRef(),r),t=await (0,i.QT)(e);if(!t.exists())return null;return this.convertFirestoreToWordCard(t)}catch(r){throw console.error("Error fetching card from Firebase:",r),Error("Failed to fetch card: ".concat(r))}}async createCard(r){try{let e=await (0,i.ET)(this.getCollectionRef(),{...r,created_at:(0,i.Bt)(),updated_at:(0,i.Bt)()}),t=await (0,i.QT)(e);if(!t.exists())throw Error("Failed to create card");return this.convertFirestoreToWordCard(t)}catch(r){throw console.error("Error creating card in Firebase:",r),Error("Failed to create card: ".concat(r))}}async updateCard(r,e){try{let t=(0,i.JU)(this.getCollectionRef(),r),{user_id:a,...o}=e;await (0,i.r7)(t,{...o,updated_at:(0,i.Bt)()});let s=await (0,i.QT)(t);if(!s.exists())throw Error("Card with id ".concat(r," not found"));return this.convertFirestoreToWordCard(s)}catch(r){throw console.error("Error updating card in Firebase:",r),Error("Failed to update card: ".concat(r))}}async deleteCard(r){try{let e=(0,i.JU)(this.getCollectionRef(),r);await (0,i.oe)(e)}catch(r){throw console.error("Error deleting card from Firebase:",r),Error("Failed to delete card: ".concat(r))}}async createCards(r){try{let e=(0,i.qs)(d.db),t=[];r.forEach(r=>{let a=(0,i.JU)(this.getCollectionRef());e.set(a,{...r,created_at:(0,i.Bt)(),updated_at:(0,i.Bt)()}),t.push(a)}),await e.commit();let a=[];for(let r of t){let e=await (0,i.QT)(r);e.exists()&&a.push(this.convertFirestoreToWordCard(e))}return a}catch(r){throw console.error("Error creating cards in Firebase:",r),Error("Failed to create cards: ".concat(r))}}async deleteAllCards(){try{let r=await (0,i.PL)(this.getCollectionRef()),e=(0,i.qs)(d.db);r.forEach(r=>{e.delete(r.ref)}),await e.commit()}catch(r){throw console.error("Error deleting all cards from Firebase:",r),Error("Failed to delete all cards: ".concat(r))}}async syncData(){try{return await this.getAllCards(),{success:!0}}catch(r){return console.error("Error syncing data:",r),{success:!1,errors:[r instanceof Error?r:Error("Unknown sync error")]}}}isOffline(){return!navigator.onLine}subscribeToCards(r){let e=(0,i.IO)(this.getCollectionRef(),(0,i.Xo)("created_at","desc")),t=(0,i.cf)(e,e=>{let t=[];e.forEach(r=>{t.push(this.convertFirestoreToWordCard(r))}),r(t)},r=>{console.error("Error in real-time listener:",r)});return this.unsubscribeListeners.push(t),t}cleanup(){this.unsubscribeListeners.forEach(r=>r()),this.unsubscribeListeners=[]}async migrateFromLocalStorage(r){try{let e=await this.getAllCards(),t=new Set(e.map(r=>r.id)),a=r.filter(r=>!t.has(r.id));if(0===a.length)return{success:!0};let o=a.map(r=>{let{id:e,created_at:t,updated_at:a,user_id:o,...s}=r;return s});return await this.createCards(o),{success:!0}}catch(r){return console.error("Error migrating from localStorage:",r),{success:!1,errors:[r instanceof Error?r:Error("Migration failed")]}}}constructor(r=null){this.user=null,this.unsubscribeListeners=[],this.user=r}}var l=t(4362);let u=(0,o.createContext)(void 0),h=r=>{let{children:e}=r,{user:t,loading:s,isAuthEnabled:i}=(0,l.a)(),[d,h]=(0,o.useState)(new n),[g,f]=(0,o.useState)(!1),[w]=(0,o.useState)(new c);(0,o.useEffect)(()=>{s||(i&&t?(w.setUser(t),h(w),f(!0)):(h(new n),f(!1)))},[t,s,i,w]);let C=async()=>{if(!i)throw Error("認証機能が無効になっているため、クラウドモードに切り替えできません");if(!t)throw Error("クラウドモードに切り替えるにはログインが必要です");w.setUser(t),h(w),f(!0)},m=async()=>{if(!i)return console.error("認証機能が無効になっているため、クラウドに移行できません"),!1;if(!t)return console.error("クラウドに移行するにはログインが必要です"),!1;try{let r=new n,e=await r.getAllCards();if(0===e.length)return!0;let t=await w.migrateFromLocalStorage(e);if(t.success)return console.log("".concat(e.length," 件のカードをクラウドに移行しました")),!0;return console.error("移行に失敗しました:",t.errors),!1}catch(r){return console.error("移行中にエラーが発生しました:",r),!1}};return(0,a.jsx)(u.Provider,{value:{dataManager:d,isCloudMode:g,switchToCloud:C,switchToLocal:()=>{h(new n),f(!1)},migrateToCloud:m},children:e})},g=()=>{let r=(0,o.useContext)(u);if(void 0===r)throw Error("useDataManager must be used within a DataManagerProvider");return r}},6410:function(r,e,t){t.d(e,{I:function(){return i},db:function(){return d}});var a=t(738),o=t(3301),s=t(5978);let n=(0,a.ZF)({apiKey:"AIzaSyBJSobP7SJjT0kLDKx7cIrq2uCeTlKs978",authDomain:"meku-run.firebaseapp.com",projectId:"meku-run",storageBucket:"meku-run.firebasestorage.app",messagingSenderId:"762843174518",appId:"1:762843174518:web:7057c9553148b56719b157"}),i=(0,o.v0)(n),d=(0,s.ad)(n)}}]);